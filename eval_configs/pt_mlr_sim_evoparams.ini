# THIS CONFIG FILE SHOULD BE RUN WITH 
# mlr_eval_sim_evoparams.py

[virus]
virus_code = HBV01

[io]
seq_file = ../data/viruses/${virus:virus_code}/data.fa
outdir = ../data/output/pt/mlr_evoparams/mutation_rate/
#outdir = ../data/output/pt/mlr_evoparams/recombination/

[simulation]
iterations = 2
# init_seq : [file, none]
# If none SantaSim will use a default sequence which is poly-adenine
init_seq = file
init_seq_size = 1000
init_pop_size = 100
init_gen_count_fraction = 0.3
nb_classes = 5
class_pop_size = 100
generation_count = 100
fitness_freq = 0.5
rep_dual_infection = 0.05
#rep_recombination = 0.001, 0.01, 0.1
rep_recombination = 0.001
mutation_rate = 0.02, 0.05, 0.1
#mutation_rate = 0.03
transition_bias = 2.0

[seq_rep]
k = 5
full_kmers = False
low_var_threshold = 0.01
fragment_size = 1000
fragment_count = 1000
fragment_cov = 2

[evaluation] 
# CC, CF or FF 
eval_type = CC
test_size = 0.33
cv_folds = 2
# precision, recall, fscore or all
eval_metric = fscore
# micro, macro or weighted
avrg_metric = macro

[classifier]
module = pytorch_mlr
tol = 1e-5
lambda = 1
l1_ratio = 0.5
solver = sgd
max_iter = 1000
### for pytorch implementation
learning_rate = 0.0001
n_iter_no_change = 100
device = cpu
##
# these penalities will be evaluated
penalty = l1, l2

[settings]
n_main_jobs = 2
n_cv_jobs = ${evaluation:cv_folds}
verbose = 1
load_data = False
save_data = True
load_models = False
save_models = True
load_results = False
save_results = True
plot_results = True
random_state = 42
