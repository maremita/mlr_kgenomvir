[virus]
virus_code = HCV02

[io]
seq_file = ../data/viruses/${virus:virus_code}/data.fa
cls_file = ../data/viruses/${virus:virus_code}/class.csv
outdir = ../data/output/mlr_lambdas/

[seq_rep]
k = 5
full_kmers = False
low_var_threshold = None
fragment_size = 1000
fragment_count = 1000
fragment_cov = 2

[evaluation] 
# CC, CF or FF 
eval_type = FF
test_size = 0.33
cv_folds = 2
# precision, recall, fscore or all
eval_metric = fscore
# micro, macro or weighted
avrg_metric = macro

[classifier]
module = pytorch_mlr
tol = 1e-5
lambda = 0, 1e-9, 1e-7, 1e-5, 1e-3, 1e-1, 1, 1e1, 1e2, 1e3, 1e5, 1e7, 1e9
#lambda = 0, 1, 5
l1_ratio = 0.5
solver = sgd
max_iter = 100
### for pytorch implementation
learning_rate = 0.00001
n_iter_no_change = 100
device = cpu
##
# these penalities will be evaluated
penalty = l1, l2

[settings]
n_main_jobs = 2
n_cv_jobs = ${evaluation:cv_folds}
verbose = 1
save_data = True
save_models = True
save_results = True
plot_results = True
random_state = 42
